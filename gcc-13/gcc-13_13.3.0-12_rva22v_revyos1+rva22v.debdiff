diff -Nru gcc-13-13.3.0/debian/changelog gcc-13-13.3.0/debian/changelog
--- gcc-13-13.3.0/debian/changelog	2024-12-31 16:06:06.000000000 +0800
+++ gcc-13-13.3.0/debian/changelog	2025-01-17 21:08:59.000000000 +0800
@@ -1,3 +1,17 @@
+gcc-13 (13.3.0-12revyos1+rva22v) unstable; urgency=medium
+
+  * Use march=
+    rv64imafdcv_zicsr_zba_zbb_zbs_zicntr_zihpm_zihintpause_zicbom_zicbop_zicboz_zfhmin_zkt
+  * disable gccgo for riscv64
+
+ -- Han Gao <rabenda.cn@gmail.com>  Fri, 17 Jan 2025 21:08:59 +0800
+
+gcc-13 (13.3.0-12revyos1) unstable; urgency=medium
+
+  * Apply revyos patchset
+
+ -- Han Gao <rabenda.cn@gmail.com>  Thu, 02 Jan 2025 00:54:13 +0800
+
 gcc-13 (13.3.0-12) unstable; urgency=medium
 
   * Update to git 20241231 from the gcc-13 branch.
diff -Nru gcc-13-13.3.0/debian/control gcc-13-13.3.0/debian/control
--- gcc-13-13.3.0/debian/control	2024-12-17 17:46:33.000000000 +0800
+++ gcc-13-13.3.0/debian/control	2025-01-17 21:08:59.000000000 +0800
@@ -13,7 +13,7 @@
   libzstd-dev, zlib1g-dev, systemtap-sdt-dev [linux-any],
   binutils:native (>= 2.39), binutils-hppa64-linux-gnu:native (>= 2.39) [hppa amd64 i386 x32],
   gperf (>= 3.0.1), bison (>= 1:2.3), flex,
-  gettext, nvptx-tools [amd64 arm64 ppc64el], amdgcn-tools [amd64],
+  gettext, nvptx-tools [amd64 arm64 ppc64el],
   texinfo (>= 4.3), locales-all, sharutils,
   procps, gnat-13:native [!arc !ia64 !loong64 !sh3 !sh3eb !sh4eb !hurd-amd64], g++-13:native, netbase, gdc-13:native [!arc !ia64 !loong64 !m68k !sh4 !s390 !sparc64 !alpha !hurd-alpha !hurd-amd64 !hurd-i386 !kfreebsd-amd64 !kfreebsd-i386], python3:any,
   libisl-dev (>= 0.20), libmpc-dev (>= 1.0), libmpfr-dev (>= 3.0.0-9~), libgmp-dev (>= 2:5.0.1~), lib32z1-dev [amd64 kfreebsd-amd64], lib64z1-dev [i386], unzip <!nocheck>,
@@ -2851,462 +2851,6 @@
  This package contains the headers and static library files needed to build
  GNU Fortran applications.
 
-Package: gccgo-13-alpha-linux-gnu
-Architecture: alpha
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-alpha-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the alpha-linux-gnu architecture
- This is the GNU Go compiler for the alpha-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-x86-64-linux-gnu
-Architecture: amd64
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-x86-64-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the x86_64-linux-gnu architecture
- This is the GNU Go compiler for the x86_64-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-arm-linux-gnueabi
-Architecture: armel
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-arm-linux-gnueabi (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the arm-linux-gnueabi architecture
- This is the GNU Go compiler for the arm-linux-gnueabi architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-arm-linux-gnueabihf
-Architecture: armhf
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-arm-linux-gnueabihf (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the arm-linux-gnueabihf architecture
- This is the GNU Go compiler for the arm-linux-gnueabihf architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-aarch64-linux-gnu
-Architecture: arm64
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-aarch64-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the aarch64-linux-gnu architecture
- This is the GNU Go compiler for the aarch64-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-i686-linux-gnu
-Architecture: i386
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-i686-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the i686-linux-gnu architecture
- This is the GNU Go compiler for the i686-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-mipsel-linux-gnu
-Architecture: mipsel
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-mipsel-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the mipsel-linux-gnu architecture
- This is the GNU Go compiler for the mipsel-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-mips64-linux-gnuabi64
-Architecture: mips64
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-mips64-linux-gnuabi64 (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the mips64-linux-gnuabi64 architecture
- This is the GNU Go compiler for the mips64-linux-gnuabi64 architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-mips64el-linux-gnuabi64
-Architecture: mips64el
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-mips64el-linux-gnuabi64 (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the mips64el-linux-gnuabi64 architecture
- This is the GNU Go compiler for the mips64el-linux-gnuabi64 architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-mips64-linux-gnuabin32
-Architecture: mipsn32
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-mips64-linux-gnuabin32 (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the mips64-linux-gnuabin32 architecture
- This is the GNU Go compiler for the mips64-linux-gnuabin32 architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-powerpc-linux-gnu
-Architecture: powerpc
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-powerpc-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the powerpc-linux-gnu architecture
- This is the GNU Go compiler for the powerpc-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-powerpc64-linux-gnu
-Architecture: ppc64
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-powerpc64-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the powerpc64-linux-gnu architecture
- This is the GNU Go compiler for the powerpc64-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-powerpc64le-linux-gnu
-Architecture: ppc64el
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-powerpc64le-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the powerpc64le-linux-gnu architecture
- This is the GNU Go compiler for the powerpc64le-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-riscv64-linux-gnu
-Architecture: riscv64
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-riscv64-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the riscv64-linux-gnu architecture
- This is the GNU Go compiler for the riscv64-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-sparc64-linux-gnu
-Architecture: sparc64
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-sparc64-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the sparc64-linux-gnu architecture
- This is the GNU Go compiler for the sparc64-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-s390x-linux-gnu
-Architecture: s390x
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-s390x-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the s390x-linux-gnu architecture
- This is the GNU Go compiler for the s390x-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-x86-64-linux-gnux32
-Architecture: x32
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-x86-64-linux-gnux32 (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the x86_64-linux-gnux32 architecture
- This is the GNU Go compiler for the x86_64-linux-gnux32 architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-mips64el-linux-gnuabin32
-Architecture: mipsn32el
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-mips64el-linux-gnuabin32 (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the mips64el-linux-gnuabin32 architecture
- This is the GNU Go compiler for the mips64el-linux-gnuabin32 architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-mipsisa32r6-linux-gnu
-Architecture: mipsr6
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-mipsisa32r6-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the mipsisa32r6-linux-gnu architecture
- This is the GNU Go compiler for the mipsisa32r6-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-mipsisa32r6el-linux-gnu
-Architecture: mipsr6el
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-mipsisa32r6el-linux-gnu (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the mipsisa32r6el-linux-gnu architecture
- This is the GNU Go compiler for the mipsisa32r6el-linux-gnu architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-mipsisa64r6-linux-gnuabi64
-Architecture: mips64r6
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-mipsisa64r6-linux-gnuabi64 (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the mipsisa64r6-linux-gnuabi64 architecture
- This is the GNU Go compiler for the mipsisa64r6-linux-gnuabi64 architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-mipsisa64r6el-linux-gnuabi64
-Architecture: mips64r6el
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-mipsisa64r6el-linux-gnuabi64 (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the mipsisa64r6el-linux-gnuabi64 architecture
- This is the GNU Go compiler for the mipsisa64r6el-linux-gnuabi64 architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-mipsisa64r6-linux-gnuabin32
-Architecture: mipsn32r6
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-mipsisa64r6-linux-gnuabin32 (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the mipsisa64r6-linux-gnuabin32 architecture
- This is the GNU Go compiler for the mipsisa64r6-linux-gnuabin32 architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-mipsisa64r6el-linux-gnuabin32
-Architecture: mipsn32r6el
-Multi-Arch: foreign
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13-mipsisa64r6el-linux-gnuabin32 (= ${gcc:Version}), libgo-13-dev (>= ${gcc:Version}), ${dep:libcdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Breaks: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Replaces: libgo12 (<< 8-20171209-2), gccgo-13 (<< 13.2.0-11)
-Description: GNU Go compiler for the mipsisa64r6el-linux-gnuabin32 architecture
- This is the GNU Go compiler for the mipsisa64r6el-linux-gnuabin32 architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
-
-Package: gccgo-13-for-host
-Architecture: any
-X-DH-Build-For-Type: target
-Multi-Arch: same
-Depends: gcc-13-base (= ${gcc:Version}), gccgo-13${target:suffix} (>= ${gcc:SoftVersion}),
-  gcc-13-for-host (= ${gcc:Version}), ${misc:Depends}
-Description: GNU Go compiler for the host architecture
- This is the GNU Go compiler for the host architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
- .
- When using this package, tools must be invoked with an architecture prefix.
- .
- This is a dependency package.
-
-Package: gccgo-13-for-build
-Architecture: all
-Multi-Arch: foreign
-Depends: gcc-13-base (>= ${gcc:SoftVersion}), gccgo-13 (>= ${gcc:Version}),
-  cpp-13-for-build (= ${gcc:Version}), gcc-13-for-build (= ${gcc:Version}),
-  ${misc:Depends}
-Description: GNU Go compiler for the build architecture
- This is the GNU Go compiler for the build architecture, which
- compiles Go on platforms supported by the gcc compiler. It uses the gcc
- backend to generate optimized code.
- .
- This is a dependency package.
-
-Package: gccgo-13
-Architecture: any
-Depends: gcc-13-base (= ${gcc:Version}), gccgo-13${target:suffix} (= ${gcc:Version}), gcc-13 (= ${gcc:Version}), ${misc:Depends}
-Provides: go-compiler
-Suggests: ${go:multilib}, gccgo-13-doc, ,
-Conflicts: ${golang:Conflicts}
-Description: GNU Go compiler
- This is the GNU Go compiler, which compiles Go on platforms supported
- by the gcc compiler. It uses the gcc backend to generate optimized code.
-
-Package: gccgo-13-multilib
-Architecture: amd64 i386 kfreebsd-amd64 mips mips64 mips64el mips64r6 mips64r6el mipsel mipsn32 mipsn32el mipsn32r6 mipsn32r6el mipsr6 mipsr6el powerpc ppc64 s390 s390x sparc sparc64 x32
-Depends: gcc-13-base (= ${gcc:Version}), gccgo-13 (= ${gcc:Version}), gcc-13-multilib (= ${gcc:Version}), ${dep:libgobiarchdev}, ${shlibs:Depends}, ${misc:Depends}
-Suggests: ${dep:libgobiarchdbg}
-Description: GNU Go compiler (multilib support)
- This is the GNU Go compiler, which compiles Go on platforms supported
- by the gcc compiler.
- .
- This is a dependency package, depending on development packages
- for the non-default multilib architecture(s).
-
-Package: libgo-13-dev
-X-DH-Build-For-Type: target
-Architecture: any
-Multi-Arch: same
-Section: libdevel
-Depends: gcc-13-base (= ${gcc:Version}), libgcc-13-dev (= ${gcc:Version}), libgo22 (>= ${gcc:Version}), ${shlibs:Depends}, ${misc:Depends}
-Description: Runtime library for GNU Go applications (development files)
- This package contains the headers and static library files needed to build
- GNU Go applications.
-
-Package: lib64go-13-dev
-X-DH-Build-For-Type: target
-Architecture: i386 powerpc sparc s390 mips mipsel mipsn32 mipsn32el mipsr6 mipsr6el mipsn32r6 mipsn32r6el x32
-Section: libdevel
-Depends: gcc-13-base (= ${gcc:Version}), lib64gcc-13-dev (= ${gcc:Version}), lib64go22 (>= ${gcc:Version}), ${shlibs:Depends}, ${misc:Depends}
-Description: Runtime library for GNU Go applications (64bit development files)
- This package contains the headers and static library files needed to build
- GNU Go applications.
-
-Package: lib32go-13-dev
-X-DH-Build-For-Type: target
-Architecture: amd64 ppc64 kfreebsd-amd64 s390x sparc64 x32 mipsn32 mipsn32el mips64 mips64el mipsn32r6 mipsn32r6el mips64r6 mips64r6el
-Section: libdevel
-Depends: gcc-13-base (= ${gcc:Version}), lib32gcc-13-dev (= ${gcc:Version}), lib32go22 (>= ${gcc:Version}), ${shlibs:Depends}, ${misc:Depends}
-Description: Runtime library for GNU Go applications (32bit development files)
- This package contains the headers and static library files needed to build
- GNU Go applications.
-
-Package: libn32go-13-dev
-X-DH-Build-For-Type: target
-Architecture: mips mipsel mips64 mips64el mipsr6 mipsr6el mips64r6 mips64r6el
-Section: libdevel
-Depends: gcc-13-base (= ${gcc:Version}), libn32gcc-13-dev (= ${gcc:Version}), libn32go22 (>= ${gcc:Version}), ${shlibs:Depends}, ${misc:Depends}
-Description: Runtime library for GNU Go applications (n32 development files)
- This package contains the headers and static library files needed to build
- GNU Go applications.
-
-Package: libx32go-13-dev
-X-DH-Build-For-Type: target
-Architecture: amd64 i386
-Section: libdevel
-Depends: gcc-13-base (= ${gcc:Version}), libx32gcc-13-dev (= ${gcc:Version}), libx32go22 (>= ${gcc:Version}), ${shlibs:Depends}, ${misc:Depends}
-Description: Runtime library for GNU Go applications (x32 development files)
- This package contains the headers and static library files needed to build
- GNU Go applications.
-
-Package: libgo22
-X-DH-Build-For-Type: target
-Section: libs
-Architecture: any
-Provides: libgo22-armel [armel], libgo22-armhf [armhf]
-Multi-Arch: same
-Pre-Depends: ${misc:Pre-Depends}
-Depends: gcc-13-base (= ${gcc:Version}), ${shlibs:Depends}, ${misc:Depends}
-Description: Runtime library for GNU Go applications
- Library needed for GNU Go applications linked against the
- shared library.
-
-Package: lib64go22
-X-DH-Build-For-Type: target
-Section: libs
-Architecture: i386 powerpc sparc s390 mips mipsel mipsn32 mipsn32el mipsr6 mipsr6el mipsn32r6 mipsn32r6el x32
-Depends: gcc-13-base (= ${gcc:Version}), ${dep:libcbiarch}, ${shlibs:Depends}, ${misc:Depends}
-Description: Runtime library for GNU Go applications (64bit)
- Library needed for GNU Go applications linked against the
- shared library.
-
-Package: lib32go22
-X-DH-Build-For-Type: target
-Section: libs
-Architecture: amd64 ppc64 kfreebsd-amd64 s390x sparc64 x32 mipsn32 mipsn32el mips64 mips64el mipsn32r6 mipsn32r6el mips64r6 mips64r6el
-Depends: gcc-13-base (= ${gcc:Version}), ${dep:libcbiarch}, ${shlibs:Depends}, ${misc:Depends}
-Conflicts: ${confl:lib32}
-Description: Runtime library for GNU Go applications (32bit)
- Library needed for GNU Go applications linked against the
- shared library.
-
-Package: libn32go22
-X-DH-Build-For-Type: target
-Section: libs
-Architecture: mips mipsel mips64 mips64el mipsr6 mipsr6el mips64r6 mips64r6el
-Depends: gcc-13-base (= ${gcc:Version}), ${dep:libcbiarch}, ${shlibs:Depends}, ${misc:Depends}
-Description: Runtime library for GNU Go applications (n32)
- Library needed for GNU Go applications linked against the
- shared library.
-
-Package: libx32go22
-X-DH-Build-For-Type: target
-Section: libs
-Architecture: amd64 i386
-Depends: gcc-13-base (= ${gcc:Version}), ${dep:libcbiarch}, ${shlibs:Depends}, ${misc:Depends}
-Description: Runtime library for GNU Go applications (x32)
- Library needed for GNU Go applications linked against the
- shared library.
-
 Package: libstdc++-13-dev
 X-DH-Build-For-Type: target
 Architecture: any
@@ -4839,47 +4383,6 @@
 # These are versions of basic static libraries such as libgcc.a compiled
 # with the -msoft-float option, for CPUs without a floating-point unit.
 
-Package: gcc-13-offload-nvptx
-Architecture: amd64 arm64 ppc64el
-Priority: optional
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13 (= ${gcc:Version}), ${dep:libcdev},
-  nvptx-tools, libgomp-plugin-nvptx1 (>= ${gcc:Version}),
-  ${shlibs:Depends}, ${misc:Depends}
-Description: GCC offloading compiler to NVPTX
- The package provides offloading support for NVidia PTX.  OpenMP and OpenACC
- programs linked with -fopenmp will by default add PTX code into the binaries,
- which can be offloaded to NVidia PTX capable devices if available.
-
-Package: libgomp-plugin-nvptx1
-Architecture: amd64 arm64 ppc64el
-Multi-Arch: same
-Section: libs
-Depends: gcc-13-base (= ${gcc:Version}), libgomp1, ${shlibs:Depends}, ${misc:Depends}
-Suggests: libcuda1 [amd64] | libnvidia-tesla-cuda1 [amd64 ppc64el] | libcuda1-any
-Description: GCC OpenMP v4.5 plugin for offloading to NVPTX
- This package contains libgomp plugin for offloading to NVidia
- PTX.  The plugin needs libcuda.so.1 shared library that has to be
- installed separately.
-
-Package: gcc-13-offload-amdgcn
-Architecture: amd64
-Priority: optional
-Depends: gcc-13-base (= ${gcc:Version}), gcc-13 (= ${gcc:Version}), ${dep:libcdev},
-  libgomp-plugin-amdgcn1 (>= ${gcc:Version}),
-  amdgcn-tools [amd64], ${shlibs:Depends}, ${misc:Depends}
-Description: GCC offloading compiler to GCN
- The package provides offloading support for AMD GCN.  OpenMP and OpenACC
- programs linked with -fopenmp will by default add GCN code into the binaries,
- which can be offloaded to AMD GCN capable devices if available.
-
-Package: libgomp-plugin-amdgcn1
-Architecture: amd64
-Multi-Arch: same
-Section: libs
-Depends: gcc-13-base (= ${gcc:Version}), libgomp1, ${shlibs:Depends}, ${misc:Depends}
-Description: GCC OpenMP v4.5 plugin for offloading to GCN
- This package contains libgomp plugin for offloading to AMD GCN.
-
 Package: gcc-13-source
 Multi-Arch: foreign
 Architecture: all
diff -Nru gcc-13-13.3.0/debian/patches/revyos-git-update-13.3.diff gcc-13-13.3.0/debian/patches/revyos-git-update-13.3.diff
--- gcc-13-13.3.0/debian/patches/revyos-git-update-13.3.diff	1970-01-01 08:00:00.000000000 +0800
+++ gcc-13-13.3.0/debian/patches/revyos-git-update-13.3.diff	2025-01-02 00:53:30.000000000 +0800
@@ -0,0 +1,602 @@
+--- a/src/gcc/config/riscv/riscv.cc
++++ b/src/gcc/config/riscv/riscv.cc
+@@ -541,16 +541,15 @@ riscv_build_integer_1 (struct riscv_integer_op codes[RISCV_MAX_INTEGER_OPS],
+ 	}
+     }
+ 
+-  if (cost > 2 && TARGET_64BIT && TARGET_ZBB)
++  if (cost > 2 && TARGET_64BIT && (TARGET_ZBB || TARGET_XTHEADBB))
+     {
+       int leading_ones = clz_hwi (~value);
+       int trailing_ones = ctz_hwi (~value);
+ 
+       /* If all bits are one except a few that are zero, and the zero bits
+-	 are within a range of 11 bits, and at least one of the upper 32-bits
+-	 is a zero, then we can generate a constant by loading a small
+-	 negative constant and rotating.  */
+-      if (leading_ones < 32
++	 are within a range of 11 bits, then we can synthesize a constant
++	 by loading a small negative constant and rotating.  */
++      if (leading_ones < 64
+ 	  && ((64 - leading_ones - trailing_ones) < 12))
+ 	{
+ 	  codes[0].code = UNKNOWN;
+--- a/src/gcc/config/riscv/riscv.md
++++ b/src/gcc/config/riscv/riscv.md
+@@ -1368,7 +1368,7 @@
+   [(set (match_operand:DI     0 "register_operand"     "=r,r")
+ 	(zero_extend:DI
+ 	    (match_operand:SI 1 "nonimmediate_operand" " r,m")))]
+-  "TARGET_64BIT && !TARGET_ZBA
++  "TARGET_64BIT && !TARGET_ZBA && !TARGET_XTHEADBB
+    && !(register_operand (operands[1], SImode)
+         && reg_or_subregno (operands[1]) == VL_REGNUM)"
+   "@
+@@ -1395,7 +1395,7 @@
+   [(set (match_operand:GPR    0 "register_operand"     "=r,r")
+ 	(zero_extend:GPR
+ 	    (match_operand:HI 1 "nonimmediate_operand" " r,m")))]
+-  "!TARGET_ZBB"
++  "!TARGET_ZBB && !TARGET_XTHEADBB"
+   "@
+    #
+    lhu\t%0,%1"
+@@ -1451,7 +1451,7 @@
+   [(set (match_operand:SUPERQI   0 "register_operand"     "=r,r")
+ 	(sign_extend:SUPERQI
+ 	    (match_operand:SHORT 1 "nonimmediate_operand" " r,m")))]
+-  "!TARGET_ZBB"
++  "!TARGET_ZBB && !TARGET_XTHEADBB"
+   "@
+    #
+    l<SHORT:size>\t%0,%1"
+--- a/src/gcc/config/riscv/sync.md
++++ b/src/gcc/config/riscv/sync.md
+@@ -57,7 +57,7 @@
+     if (model == MEMMODEL_SEQ_CST)
+ 	return "fence\trw,rw";
+     else if (model == MEMMODEL_ACQ_REL)
+-	return "fence.tso";
++	return "fence\trw,rw";
+     else if (model == MEMMODEL_ACQUIRE)
+ 	return "fence\tr,rw";
+     else if (model == MEMMODEL_RELEASE)
+--- a/src/gcc/config/riscv/thead.cc
++++ b/src/gcc/config/riscv/thead.cc
+@@ -336,8 +336,8 @@ th_mempair_operands_p (rtx operands[4], bool load_p,
+ }
+ 
+ /* Given OPERANDS of consecutive load/store that can be merged,
+-   swap them if they are not in ascending order.
+-   Return true if swap was performed.  */
++   swap them if they are not in ascending order.  */
++
+ void
+ th_mempair_order_operands (rtx operands[4], bool load_p, machine_mode mode)
+ {
+@@ -366,14 +366,15 @@ th_mempair_save_regs (rtx operands[4])
+ {
+   rtx set1 = gen_rtx_SET (operands[0], operands[1]);
+   rtx set2 = gen_rtx_SET (operands[2], operands[3]);
++  rtx dwarf = gen_rtx_SEQUENCE (VOIDmode, rtvec_alloc (2));
+   rtx insn = emit_insn (gen_rtx_PARALLEL (VOIDmode, gen_rtvec (2, set1, set2)));
+   RTX_FRAME_RELATED_P (insn) = 1;
+ 
+-  REG_NOTES (insn) = alloc_EXPR_LIST (REG_FRAME_RELATED_EXPR,
+-				      copy_rtx (set1), REG_NOTES (insn));
+-
+-  REG_NOTES (insn) = alloc_EXPR_LIST (REG_FRAME_RELATED_EXPR,
+-				      copy_rtx (set2), REG_NOTES (insn));
++  XVECEXP (dwarf, 0, 0) = copy_rtx (set1);
++  XVECEXP (dwarf, 0, 1) = copy_rtx (set2);
++  RTX_FRAME_RELATED_P (XVECEXP (dwarf, 0, 0)) = 1;
++  RTX_FRAME_RELATED_P (XVECEXP (dwarf, 0, 1)) = 1;
++  add_reg_note (insn, REG_FRAME_RELATED_EXPR, dwarf);
+ }
+ 
+ /* Similar like riscv_restore_reg, but restores two registers from memory
+--- a/src/gcc/config/riscv/thead.md
++++ b/src/gcc/config/riscv/thead.md
+@@ -59,6 +59,28 @@
+   [(set_attr "type" "bitmanip")
+    (set_attr "mode" "<GPR:MODE>")])
+ 
++(define_insn "*extendhi<SUPERQI:mode>2_th_ext"
++  [(set (match_operand:SUPERQI 0 "register_operand" "=r,r")
++	(sign_extend:SUPERQI
++	    (match_operand:HI 1 "nonimmediate_operand" "r,m")))]
++  "TARGET_XTHEADBB"
++  "@
++   th.ext\t%0,%1,15,0
++   lh\t%0,%1"
++  [(set_attr "type" "bitmanip,load")
++   (set_attr "mode" "<SUPERQI:MODE>")])
++
++(define_insn "*extendqi<SUPERQI:mode>2_th_ext"
++  [(set (match_operand:SUPERQI 0 "register_operand" "=r,r")
++	(sign_extend:SUPERQI
++	    (match_operand:QI 1 "nonimmediate_operand" "r,m")))]
++  "TARGET_XTHEADBB"
++  "@
++   th.ext\t%0,%1,7,0
++   lb\t%0,%1"
++  [(set_attr "type" "bitmanip,load")
++   (set_attr "mode" "<SUPERQI:MODE>")])
++
+ (define_insn "*th_extu<mode>4"
+   [(set (match_operand:GPR 0 "register_operand" "=r")
+ 	(zero_extract:GPR (match_operand:GPR 1 "register_operand" "r")
+@@ -72,6 +94,26 @@
+   [(set_attr "type" "bitmanip")
+    (set_attr "mode" "<GPR:MODE>")])
+ 
++(define_insn "*zero_extendsidi2_th_extu"
++  [(set (match_operand:DI 0 "register_operand" "=r,r")
++	(zero_extend:DI (match_operand:SI 1 "nonimmediate_operand" "r,m")))]
++  "TARGET_64BIT && TARGET_XTHEADBB"
++  "@
++   th.extu\t%0,%1,31,0
++   lwu\t%0,%1"
++  [(set_attr "type" "bitmanip,load")
++   (set_attr "mode" "DI")])
++
++(define_insn "*zero_extendhi<GPR:mode>2_th_extu"
++  [(set (match_operand:GPR 0 "register_operand" "=r,r")
++	(zero_extend:GPR (match_operand:HI 1 "nonimmediate_operand" "r,m")))]
++  "TARGET_XTHEADBB"
++  "@
++   th.extu\t%0,%1,15,0
++   lhu\t%0,%1"
++  [(set_attr "type" "bitmanip,load")
++   (set_attr "mode" "<GPR:MODE>")])
++
+ (define_insn "*th_clz<mode>2"
+   [(set (match_operand:X 0 "register_operand" "=r")
+ 	(clz:X (match_operand:X 1 "register_operand" "r")))]
+new file mode 100644
+--- /dev/null
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadbb-ext-1.c
+@@ -0,0 +1,67 @@
++/* { dg-do compile } */
++/* { dg-options "-march=rv64gc_xtheadbb" { target { rv64 } } } */
++/* { dg-options "-march=rv32gc_xtheadbb" { target { rv32 } } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" } } */
++
++long sext64_32(int s32)
++{
++    return s32;
++}
++
++long sext64_16(short s16)
++{
++    return s16;
++}
++
++long sext64_8(char s8)
++{
++    return s8;
++}
++
++int sext32_64(long s64)
++{
++    return s64;
++}
++
++int sext32_16(short s16)
++{
++    return s16;
++}
++
++int sext32_8(char s8)
++{
++    return s8;
++}
++
++short sext16_64(long s64)
++{
++    return s64;
++}
++
++short sext16_32(int s32)
++{
++    return s32;
++}
++
++short sext16_8(char s8)
++{
++    return s8;
++}
++
++char sext8_64(long s64)
++{
++    return s64;
++}
++
++char sext8_32(int s32)
++{
++    return s32;
++}
++
++char sext8_16(short s16)
++{
++    return s16;
++}
++
++/* { dg-final { scan-assembler-not "slli" } } */
++/* { dg-final { scan-assembler-not "srli" } } */
+new file mode 100644
+--- /dev/null
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadbb-ext-2.c
+@@ -0,0 +1,12 @@
++/* { dg-do compile } */
++/* { dg-options "-march=rv64gc_xtheadbb" { target { rv64 } } } */
++/* { dg-options "-march=rv32gc_xtheadbb" { target { rv32 } } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" "-Oz" } } */
++
++signed long extqi(signed char i)
++{
++    return --i;
++}
++
++/* { dg-final { scan-assembler "th.ext\ta\[0-9\]+,a\[0-9\]+,7,0" } } */
++/* { dg-final { scan-assembler-not "th.ext\ta\[0-9\]+,a\[0-9\]+,15,0" } } */
+new file mode 100644
+--- /dev/null
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadbb-ext-3.c
+@@ -0,0 +1,12 @@
++/* { dg-do compile } */
++/* { dg-options "-march=rv64gc_xtheadbb" { target { rv64 } } } */
++/* { dg-options "-march=rv32gc_xtheadbb" { target { rv32 } } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" "-Oz" } } */
++
++signed long exthi(signed short i)
++{
++    return --i;
++}
++
++/* { dg-final { scan-assembler "th.ext\ta\[0-9\]+,a\[0-9\]+,15,0" } } */
++/* { dg-final { scan-assembler-not "th.ext\ta\[0-9\]+,a\[0-9\]+,7,0" } } */
+new file mode 100644
+--- /dev/null
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadbb-extu-1.c
+@@ -0,0 +1,67 @@
++/* { dg-do compile } */
++/* { dg-options "-march=rv32gc_xtheadbb" { target { rv32 } } } */
++/* { dg-options "-march=rv64gc_xtheadbb" { target { rv64 } } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" } } */
++
++unsigned long zext64_32(unsigned int u32)
++{
++    return u32; //th.extu a0, a0, 31, 0
++}
++
++unsigned long zext64_16(unsigned short u16)
++{
++    return u16;
++}
++
++unsigned long zext64_8(unsigned char u8)
++{
++    return u8;
++}
++
++unsigned int zext32_64(unsigned long u64)
++{
++    return u64;
++}
++
++unsigned int zext32_16(unsigned short u16)
++{
++    return u16;
++}
++
++unsigned int zext32_8(unsigned char u8)
++{
++    return u8;
++}
++
++unsigned short zext16_64(unsigned long u64)
++{
++    return u64;
++}
++
++unsigned short zext16_32(unsigned int u32)
++{
++    return u32;
++}
++
++unsigned short zext16_8(unsigned char u8)
++{
++    return u8;
++}
++
++unsigned char zext8_64(unsigned long u64)
++{
++    return u64;
++}
++
++unsigned char zext8_32(unsigned int u32)
++{
++    return u32;
++}
++
++unsigned char zext8_16(unsigned short u16)
++{
++    return u16;
++}
++
++/* { dg-final { scan-assembler-not "slli" } } */
++/* { dg-final { scan-assembler-not "srli" } } */
+new file mode 100644
+--- /dev/null
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadbb-li-rotr.c
+@@ -0,0 +1,88 @@
++/* { dg-do compile } */
++/* { dg-options "-march=rv64gc_xtheadbb -mabi=lp64" } */
++/* { dg-skip-if "" { *-*-* } {"-O0" "-Os" "-Og" "-Oz" "-flto" } } */
++/* { dg-final { check-function-bodies "**" "" } } */
++
++/*
++**li_th_srri_1:
++**     li	a[0-9]+,-18
++**     th.srri	a[0-9]+,a[0-9]+,21
++**     ret
++*/
++long
++li_th_srri_1 (void)
++{
++  return 0xffff77ffffffffffL;
++}
++
++/*
++**li_th_srri_2:
++**     li	a[0-9]+,-18
++**     th.srri	a[0-9]+,a[0-9]+,5
++**     ret
++*/
++long
++li_th_srri_2 (void)
++{
++  return 0x77ffffffffffffffL;
++}
++
++/*
++**li_th_srri_3:
++**     li	a[0-9]+,-18
++**     th.srri	a[0-9]+,a[0-9]+,36
++**     ret
++*/
++long
++li_th_srri_3 (void)
++{
++  return 0xfffffffeefffffffL;
++}
++
++/*
++**li_th_srri_4:
++**     li	a[0-9]+,-86
++**     th.srri	a[0-9]+,a[0-9]+,3
++**     ret
++*/
++long
++li_th_srri_4 (void)
++{
++  return 0x5ffffffffffffff5L;
++}
++
++/*
++**li_th_srri_5:
++**     li	a[0-9]+,-86
++**     th.srri	a[0-9]+,a[0-9]+,4
++**     ret
++*/
++long
++li_th_srri_5 (void)
++{
++  return 0xaffffffffffffffaL;
++}
++
++/*
++**li_th_srri_6:
++**     li	a[0-9]+,-256
++**     th.srri	a[0-9]+,a[0-9]+,40
++**     ret
++*/
++long
++li_th_srri_6 (void)
++{
++  return 0xffffffff00ffffffL;
++}
++
++/*
++**li_th_srri_7:
++**     li	a[0-9]+,-2048
++**     th.srri	a[0-9]+,a[0-9]+,16
++**     ret
++*/
++long
++li_th_srri_7 (void)
++{
++  return 0xf800ffffffffffffL;
++}
+--- a/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mveqz-imm-eqz.c
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mveqz-imm-eqz.c
+@@ -1,7 +1,7 @@
+ /* { dg-do compile } */
+ /* { dg-options "-march=rv32gc_xtheadcondmov" { target { rv32 } } } */
+ /* { dg-options "-march=rv64gc_xtheadcondmov" { target { rv64 } } } */
+-/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" "-Oz" } } */
+ 
+ int
+ not_int_int (int x, int cond)
+--- a/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mveqz-imm-not.c
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mveqz-imm-not.c
+@@ -1,7 +1,7 @@
+ /* { dg-do compile } */
+ /* { dg-options "-march=rv32gc_xtheadcondmov" { target { rv32 } } } */
+ /* { dg-options "-march=rv64gc_xtheadcondmov" { target { rv64 } } } */
+-/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" "-Oz" } } */
+ 
+ int
+ not_int_int (int x, int cond)
+--- a/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mveqz-reg-eqz.c
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mveqz-reg-eqz.c
+@@ -1,7 +1,7 @@
+ /* { dg-do compile } */
+ /* { dg-options "-march=rv32gc_xtheadcondmov" { target { rv32 } } } */
+ /* { dg-options "-march=rv64gc_xtheadcondmov" { target { rv64 } } } */
+-/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" "-Oz" } } */
+ 
+ int
+ not_int_int (int x, int cond, int v)
+--- a/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mveqz-reg-not.c
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mveqz-reg-not.c
+@@ -1,7 +1,7 @@
+ /* { dg-do compile } */
+ /* { dg-options "-march=rv32gc_xtheadcondmov" { target { rv32 } } } */
+ /* { dg-options "-march=rv64gc_xtheadcondmov" { target { rv64 } } } */
+-/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" "-Oz" } } */
+ 
+ int
+ not_int_int (int x, int cond, int v)
+--- a/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mvnez-imm-cond.c
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mvnez-imm-cond.c
+@@ -1,7 +1,7 @@
+ /* { dg-do compile } */
+ /* { dg-options "-march=rv32gc_xtheadcondmov" { target { rv32 } } } */
+ /* { dg-options "-march=rv64gc_xtheadcondmov" { target { rv64 } } } */
+-/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" "-Oz" } } */
+ 
+ int
+ not_int_int (int x, int cond)
+--- a/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mvnez-imm-nez.c
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mvnez-imm-nez.c
+@@ -1,7 +1,7 @@
+ /* { dg-do compile } */
+ /* { dg-options "-march=rv32gc_xtheadcondmov" { target { rv32 } } } */
+ /* { dg-options "-march=rv64gc_xtheadcondmov" { target { rv64 } } } */
+-/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" "-Oz" } } */
+ 
+ int
+ not_int_int (int x, int cond)
+--- a/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mvnez-reg-cond.c
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mvnez-reg-cond.c
+@@ -1,7 +1,7 @@
+ /* { dg-do compile } */
+ /* { dg-options "-march=rv32gc_xtheadcondmov" { target { rv32 } } } */
+ /* { dg-options "-march=rv64gc_xtheadcondmov" { target { rv64 } } } */
+-/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" "-Oz" } } */
+ 
+ int
+ not_int_int (int x, int cond, int v)
+--- a/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mvnez-reg-nez.c
++++ b/src/gcc/testsuite/gcc.target/riscv/xtheadcondmov-mvnez-reg-nez.c
+@@ -1,7 +1,7 @@
+ /* { dg-do compile } */
+ /* { dg-options "-march=rv32gc_xtheadcondmov" { target { rv32 } } } */
+ /* { dg-options "-march=rv64gc_xtheadcondmov" { target { rv64 } } } */
+-/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" } } */
++/* { dg-skip-if "" { *-*-* } { "-O0" "-Os" "-Og" "-Oz" } } */
+ 
+ int
+ not_int_int (int x, int cond, int v)
+--- a/src/gcc/testsuite/gcc.target/riscv/zbb-li-rotr.c
++++ b/src/gcc/testsuite/gcc.target/riscv/zbb-li-rotr.c
+@@ -1,35 +1,88 @@
+ /* { dg-do compile } */
+ /* { dg-options "-march=rv64gc_zbb -mabi=lp64" } */
++/* { dg-skip-if "" { *-*-* } {"-O0" "-Os" "-Og" "-Oz" "-flto" } } */
++/* { dg-final { check-function-bodies "**" "" } } */
+ 
++/*
++**li_rori_1:
++**     li	a[0-9]+,-18
++**     rori	a[0-9]+,a[0-9]+,21
++**     ret
++*/
+ long
+-li_rori (void)
++li_rori_1 (void)
+ {
+   return 0xffff77ffffffffffL;
+ }
+ 
++/*
++**li_rori_2:
++**     li	a[0-9]+,-18
++**     rori	a[0-9]+,a[0-9]+,5
++**     ret
++*/
+ long
+ li_rori_2 (void)
+ {
+   return 0x77ffffffffffffffL;
+ }
+ 
++/*
++**li_rori_3:
++**     li	a[0-9]+,-18
++**     rori	a[0-9]+,a[0-9]+,36
++**     ret
++*/
+ long
+ li_rori_3 (void)
+ {
+   return 0xfffffffeefffffffL;
+ }
+ 
++/*
++**li_rori_4:
++**     li	a[0-9]+,-86
++**     rori	a[0-9]+,a[0-9]+,3
++**     ret
++*/
+ long
+ li_rori_4 (void)
+ {
+   return 0x5ffffffffffffff5L;
+ }
+ 
++/*
++**li_rori_5:
++**     li	a[0-9]+,-86
++**     rori	a[0-9]+,a[0-9]+,4
++**     ret
++*/
+ long
+ li_rori_5 (void)
+ {
+   return 0xaffffffffffffffaL;
+ }
+ 
++/*
++**li_rori_6:
++**     li	a[0-9]+,-256
++**     rori	a[0-9]+,a[0-9]+,40
++**     ret
++*/
++long
++li_rori_6 (void)
++{
++  return 0xffffffff00ffffffL;
++}
+ 
+-/* { dg-final { scan-assembler-times "rori\t" 5 } } */
++/*
++**li_rori_7:
++**     li	a[0-9]+,-2048
++**     rori	a[0-9]+,a[0-9]+,16
++**     ret
++*/
++long
++li_rori_7 (void)
++{
++  return 0xf800ffffffffffffL;
++}
diff -Nru gcc-13-13.3.0/debian/rules2 gcc-13-13.3.0/debian/rules2
--- gcc-13-13.3.0/debian/rules2	2024-12-16 18:37:19.000000000 +0800
+++ gcc-13-13.3.0/debian/rules2	2025-01-17 21:08:49.000000000 +0800
@@ -620,7 +620,7 @@
 
 ifneq (,$(findstring riscv64-linux,$(DEB_TARGET_GNU_TYPE)))
   CONFARGS += --disable-multilib
-  CONFARGS += --with-arch=rv64gc --with-abi=lp64d
+  CONFARGS += --with-arch=rv64imafdcv_zicsr_zba_zbb_zbs_zicntr_zihpm_zihintpause_zicbom_zicbop_zicboz_zfhmin_zkt --with-abi=lp64d
 endif
 
 ifneq (,$(findstring s390x-linux,$(DEB_TARGET_GNU_TYPE)))
diff -Nru gcc-13-13.3.0/debian/rules.defs gcc-13-13.3.0/debian/rules.defs
--- gcc-13-13.3.0/debian/rules.defs	2024-12-17 16:40:07.000000000 +0800
+++ gcc-13-13.3.0/debian/rules.defs	2025-01-17 21:08:59.000000000 +0800
@@ -1066,6 +1066,10 @@
 go_no_cpus  += sh4
 go_no_archs += sh4
 
+# rva22v is not support gccgo
+go_no_cpus  += riscv64
+go_no_archs += riscv64
+
 ifneq ($(with_base_only),yes)
   ifneq ($(separate_lang),yes)
     with_go := yes
diff -Nru gcc-13-13.3.0/debian/rules.parameters gcc-13-13.3.0/debian/rules.parameters
--- gcc-13-13.3.0/debian/rules.parameters	2024-12-21 19:18:51.000000000 +0800
+++ gcc-13-13.3.0/debian/rules.parameters	2025-01-17 21:08:59.000000000 +0800
@@ -2,14 +2,14 @@
 GCC_VERSION	:= 13.3.0
 NEXT_GCC_VERSION	:= 13.3.1
 BASE_VERSION	:= 13
-SOURCE_VERSION	:= 13.3.0-12
-DEB_VERSION	:= 13.3.0-12
-DEB_EVERSION	:= 1:13.3.0-12
-DEB_GDC_VERSION	:= 13.3.0-12
+SOURCE_VERSION	:= 13.3.0-12revyos1+rva22v
+DEB_VERSION	:= 13.3.0-12revyos1+rva22v
+DEB_EVERSION	:= 1:13.3.0-12revyos1+rva22v
+DEB_GDC_VERSION	:= 13.3.0-12revyos1+rva22v
 DEB_SOVERSION	:= 5
 DEB_SOEVERSION	:= 1:5
 DEB_LIBGCC_SOVERSION	:= 
-DEB_LIBGCC_VERSION	:= 13.3.0-12
+DEB_LIBGCC_VERSION	:= 13.3.0-12revyos1+rva22v
 DEB_STDCXX_SOVERSION	:= 5
 DEB_GOMP_SOVERSION	:= 5
 GCC_SONAME	:= 1
diff -Nru gcc-13-13.3.0/debian/rules.patch gcc-13-13.3.0/debian/rules.patch
--- gcc-13-13.3.0/debian/rules.patch	2024-12-30 18:32:40.000000000 +0800
+++ gcc-13-13.3.0/debian/rules.patch	2025-01-02 00:54:05.000000000 +0800
@@ -285,6 +285,9 @@
 # don't remove, this is regularly overwritten, see PR sanitizer/63958.
 #debian_patches += libasan-sparc
 
+# revyos patch
+debian_patches += revyos-git-update-13.3
+
 series_stamp = $(stampdir)/02-series-stamp
 series: $(series_stamp)
 $(series_stamp):
